ed38c2c Resolve merge conflicts
efcea9e [Refactor] package structure redesign
bad38b6 [Chore] change log level as INFO
cb20f99 [Feat] Changed to distinguish web server instances by port and host name in ServerExecutor
60add9f [Clean] remove unncessary code
5465096 [Refactor] change int to byte for parsing to avoid type conversion to int and to reduce memory usage by handling network input at the byte level (1 byte per unit).
9b8c443 [Refactor] addDefaultHeader method int Http11ResponseHandler
b2f53f8 [Refactor] Separate HTTP/1.1 header parsing logic from Http11InputBuffer to Http11Parser for SRP
a4ad126 [Refactor] Refactoring dispatch method for extensibility to support http 2 protocol
4f33d28 [Rename] restructure org/dochi/connector package
0df7867 [Test] separate  BioSocketWrapperConnectionTest from BioSocketWrapperTest
78fb34b [Rename] remove unused test class in out file
0b402b4 [Refactor] set BufferedOutputStream logic Http11ResponseHandler
18ae1aa [Test] add connector.InternalInputStreamTest
781d81c [Rename] handler rename to  connector package
ae1b7aa [Fix] parameter null return empty MediaType Obj whe call MediaType.parseMediaType()
afa99ad [Test] add HttpRequestHandlerTest
3a659dd [Test] add RequestTest
c46418d [Clean] remove unnecessary code
e0a4dcd [Test] add MimeHeaderFieldTest
76441b2 [Test] add MediaTypeTest
6755c01 [Test] add ParametersTest
b6764f5 [Test] add MimeHeadersTest
6db3495 [Test] PartTest
f75b4e3 [Test] MultipartParametersTest
9c7dd01 [Test] MultipartHeadersTest
ec01cd6 [Test] add MultipartStreamTest
5d557c6 [Test] add MultipartFileManagerTest
4bcc183 [Test] add MessageBytesTest
bb13dd8 [Test] add MultipartTest
aa6a4fd [Test] add ByteChunkTest
d15161e [Test] add SocketTaskPoolTest
0d97d0e [Feat] add config interfaces for was instance
4c2f3bd [Test] add HttpProtocolHandlerTest
62f54de [Test] improvment teset in Http11InputBufferTest
4b8b40f [Clean] clean unnecessary code in all files
d4c6c19 [Refactor] refactor org/dochi/processor and relocate files/remove unused files
a88eac0 [Refactor] org/dochi/http/buffer/processor separate InputBuffer implementation from HttpRequestProcessor
7b29263 [Clean] HttpProcessor
5819086 [Clean] HttpProcessor
5116d2d [Refactor] SocketTask Implementation terminate logic
9d62917 [Feat] Implementing a HttpProcessor object pool using LIFO with ConcurrentLinkedDeque for cache locality
6909c43 [Refactor] additional replication logic for crlf line buffer data in MultipartStream
7e8b86d [Fix] remove non crlf exception in HttpRequestStream
45dc5d3 [Remove]
5a0f5e1 [Remove]
b779488 [Refactor] remove line buffer copy cost in Http11RequestStream
62709f7 Merge branch 'temp-sync'
3896ee8 [Fix] SocketTask implementation returning objects to the pool before execution
ee17eb5 [Remove] non necessary files
22d7928 [Refactor] 1. Introduce internal architecture for buffer parsing logic in HttpRequestProcessor to improve protocol extensibility and GC performance. 2. Add SocketWrapperBase for future support of non-blocking I/O socket extension from existing blocking socket
ec43f55 [Remove] non necessary files
2273a8b [Fix] Http11Processor service() method
1dabe46 [Fix] add request count logic in AbstractHttpProcessor.proess() method
7cd7aa5 [Fix] AbstractHttpProcessor.proess() method logic
1789a0e [Docs] update README.md
c9d521d [Fix] add response flush in AbstractHttpProcessor.sendError()
b7deb7d [Refactor] Refactor the existing http.processor.Http11Processor internal architecture and fix test code.
747fc59 [Feat] Implementing a request data processing architecture for a common structure compatible with each protocol (internal layer, connector layer) [Refactor] Refactoring multipart/form-data and application/x-www-form-urlencoded input and parsing logic for a common structure compatible with each protocol
dcdcbb7 [Feat] request data processing architecture: low level layer internal.Request for raw data and high level layer connector.Request for developer.
9727f17 [Feat] IntenalInputStream that reads the body by referencing an InputBuffer implementation compatible with each protocol.
30572e8 [Feat] HttpInputBuffer for Protocol Extension Compatibility in org/dochi/buffer package.
5b72484 Merge pull request #5 from devjohnpark/keep-alive_issue
4888be6 [Comment] org/dochi/http/processor package
b14166d [Fix] Setting connection close header field for reaching keep-alive max request. [Refactor] Ensuring the integrity of socket state for memory visibility.
5e1c2f7 [Clean] clean unnecessary code
cf282fa [Feat] A single JAR file for deployment, use a class loader to read files inside the JAR file.
45213ee [Remove] multipart-file
61c4f47 Large Commit List 1. [Feat] Implement SocketTaskExecutor to execute and reuse SocketTask implementation for newly connected sockets using a socket task pool and worker thread pool. 2. [Feat] Implement HttpBufferedInputStream, adding buffering functionality to the injected SocketInputStream. 3. [Feat] Implement Http11RequestStream, an HTTP/1.1-specific request stream that implements HttpCrlfLineReader for reading CRLF-separated lines and HttpBodyReader for reading request bodies. 4. [Feat] Implement request handling for multipart/form-data (org/dochi/http/request/multipart). 5. [Feat] Implement monitoring to limit the input/output size of HTTP messages (org/dochi/http/monitor). 6. [Feat] Implement HttpProcessor interface and AbstractHttpProcessor for common HTTP request processing. 7. [Feat] Throw HttpStatusException for invalid HTTP requests to ensure consistent exception handling in AbstractHttpProcessor. 8. [Feat] Introduce HttpRequestProcessor and HttpApiRequest interface layers to separate internal HTTP request processing from developer-facing HTTP API functionality. 9. [Refactor] HttpRequestProcessor to separate request data storage (Request) for future HTTP/2.0 upgrades, allowing cloned request objects to be passed to the HTTP/2.0 processor.
2b930bd [Feat] shutdown hook and prestart core threads in WorkerPoolExecutor.java
cc1896e [Test] add ThreadPoolTest.java and RequestHandlerPoolTest.java
0357de3 [Refator] separate ThreadPoolExecutor to RequestHandlerPool and WorkerPoolExecutor
f739a42 [Feat] ThreadPoolExecutor
8285d28 [Test] add tests in webserver package
ec294ac [Refactor] HttpResponse internal refactoring
3ce2863 [Feat] response 400 for invalid request line
f259c93 [Feat] Lifecycle context of WebServer with WebService.
6f959bb [Feat] Support keep alive feature in HTTP/1.0 and HTTP/1.1 and Improve exception handling
a88c85e [Feat] Implementing the cornerstone of HTTP/1.1 persistent connection.
61d3b7d [Docs] update readme.md
9197884 [Docs] update readme.md
a70d83e [Feat] Executor throw exception when port duplication
ec905bd [Comment] remove unnecessary comments
eb128ee [Test] add test methods in HttpResponse
de33624 [Rename] package name to org.dochi
3355d8b [Fix] sendDefaultError method in AbstractHttpApiHandler
1a180be [Clean] remove unnecessary code
978d5ed [Docs] modify README.md
343a368 [Rename] project dir as http-web-server
c7528f2 [Refactor] input default HttpApiHandelr Object and add HttpApiHandelr using method chaining in WebService
e170efa [Fix] remove shutdown() of ExecutorService by using etry-with-resources
5b15fc4 [Test] add WebServiceTest
8904aa0 [Fix] close ServerSocket using try-with-resources
11c0e20 [Feat] Support multi server instance by port
1d79256 [Refactor] Web server initialization from XML file to object
1d61259 [Test] create WebServiceConfig instance and get fields in WebServiceConfigTest
b8f579c [Test] create ServerConfig instance and get fields in ServerConfigTest
25f4076 [Test] refactor request mapper in  RequestMapperTest
9d9f8c4 [Refactor] http api handlers initialize logic in ServiceConfig.
d66da6c [Remove] remove unused files
d716389 [Refactor] remove ResourceHandler and add ResourceProvider
ab123d8 [Test] remove getHttpApiHandler method in HttpApiMapperTest
a50566b [Fix] null argument case: HttpApiHandler implementation of registerHttpApiHandler method in class HttpApiMapper
0242269 [Remove]
3554af4 [Refactor] Clean up WebServer, ServerConfig, ServerContext
4ac5a65 [Feat] server context logic to inject directory path of static web resources into WebResourceProvider in ServerContext
705fde8 [Rename] config.xml to server.xml
61a1edb [Test] register HttpApiHandler and get HttpApiHandler in HttpApiMapperTest
fe853b1 [Feat] configure server with xml file in ServerConfig
e3ca2ad [Test] save http request messages to file  for testesting in HttpRequestTest
6282809 [Test] status line  test in StatusLine
d6d8e27 [Test] response header test in ResponseHeaders
212f237 [Test] http response test in HttpResponseTest
012e0ce [Refactor] process of content type and content length
8a85beb [Refactor] Organize methods in HttpResponse
70edafe [Style] change name of method in class HttpRequestTest
f34e1d8 [Refactor] Unification of the request data input processing data as a bufferedReader object
1c7cb31 [Fix] URL decode null value in RequestParameters
3605736 [Feat] Add readBodyAsString and readBodyAsBytes in HttpRequest, setBody(String body) in HttpReqsponse
7932d49 [Refactor] Refactored to pass SocketInputStream so that other objects referencing HttpRequest can read the body value of the http request message
eae1098 [Test] HttpReqHeader
044ff64 [Test] request line and body parameters in RequestParameters
3cfc222 [Fix] url blank decoding
af9ba14 [Refactor] Remove duplication request parameters logic in HttpRequest
0538d4b [Rafactor] Change RequestLine, an inner class of HttpRequest class, to an outer class
52d8891 [Refactpr] Separate WebServer for single responsebility
e2b320d [Test] not content type and invalid content length  in HttpRequestTest
37978f6 [Test] vaild post request in HttpRequestTest
10b9255 [Feat] HttpRequest set body param
4e38c28 [Test] class HttpRequestTest
98208ba [Test] webresource package
9f8b2f6 [Refactor] change class RequestLine to inner class of class HttpRequest
34446c6 [Refactor] For flexible manipulation of http response
0cad87f [Refactor] webresources package
95306ed [Refactor] webresources pacakge for fixed resource creation logic and flexibility in handling multiple resources.
655e790 [Refactor] remove FileResource
626ae2f [Refactor] Return the getresource method from null to an empty object in WebResourceHandler
a34f06c [Refactor] webresources package
9fdc1a6 [Test] HttpRequestPaser
abce3f8 [Feat] parse request line and header in HttpRequestPaser
f37fbb3 [Feat] parse url components in HttpParser
37465cd [Feat] Add querystring field and code improvement in RequestLine.
217f0a7 [Refactor] Change architecture
b26b524 [Comment] change comment
a504f5b [Fix] send response test Whenever the response header changes in HttpResponse.java
763a194 [Refactor] response content type logic in HttpResponse.java
4c13393 [Style] change method name in HttpRequest and HttpResponse
5eadf5f [Feat] Add favicon.ico
8345b41 [Test] send response in HttpResponseTest.java
6f104b8 [Fix] read request header logic
d7227d8 [Test] HttpResponseTest
02c1345 [Test] HttpResponseTest
554f1fb [Test] HttpRequestTest
40da2bb [Refactor] Separate the object that perform request processing into request data processing object and response data processing object.
fc18592 [Feat] HttpResponse class and HttpStatus enum
654dda3 [Refactor] Create HTTP Response Message Logic
5249898 [Refactor] Create HTTP Response Message Logic
d3c81f6 [Refactor] Class RequestHandler
8b6a5a3 [Feat] response 404 header
d97d79f [Feat] Response index.html
b2046cd [Chore] remove guava in build.gradle
9c96121 [Comment] WebServer and RequestHandler
b7c3351 [Feat] console log output and saving log file by date
0d451d4 [Feat] Add logging of WebServer and RequestHandler class
276be64 [Fix] run method of Requesthandler.java
b7fe08d [Feat] Respond to a user's request
305d2a3 [ADD] build.gradle and libs.versions.toml
dc05b75 first commit
